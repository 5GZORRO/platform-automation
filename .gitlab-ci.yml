include:
  - template: Security/SAST-IaC.latest.gitlab-ci.yml

stages:
  - validate
  - test
  - build
  - deploy
  - cleanup

image: 
  name: gitlab-registry.fbk.eu/kubernetes-deploy/5g-zorro/terraform:1.2.8

variables:
  TF_ROOT: ${CI_PROJECT_DIR}/terraform
  TF_STATE_NAME: 5gzorro

cache:
  key: "${TF_ROOT}"
  paths:
    - ${TF_ROOT}/.terraform/

test:
  stage: test
  rules:
    - if: $DEPLOY != "true" && $DESTROY != "true"
    
fmt:
  stage: validate
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform fmt -check
  allow_failure: true
  rules:
    - if: $DEPLOY != "true" && $DESTROY != "true"
    
validate:
  stage: validate
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform validate
  rules:
    - if: $DEPLOY != "true" && $DESTROY != "true"

build:
  stage: build
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform plan -var="ssh_public_key=${TF_VAR_ssh_public_key}" -var="ssh_private_key=${TF_VAR_ssh_private_key}"
    - gitlab-terraform plan-json -var="ssh_public_key=${TF_VAR_ssh_public_key}" -var="ssh_private_key=${TF_VAR_ssh_private_key}"
  resource_group: ${TF_STATE_NAME}
  artifacts:
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json
    expire_in: 1 week
  rules:
    - if: $DESTROY == "true"
    - if: $SCALE_DOWN == "true"
    - if: $DEPLOY == "true"
    
deploy:
  stage: deploy
  before_script:
    - mkdir -p /root/.ssh && echo "$SSH_PRIVATE_KEY_ENCODED" | base64 -d > ${TF_VAR_ssh_private_key} && chmod 0600 ${TF_VAR_ssh_private_key}
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform apply -auto-approve 
  resource_group: ${TF_STATE_NAME}
  rules:
    - if: $DEPLOY == "true"
  artifacts:
    paths:
      - ${TF_ROOT}/
    expire_in: 1 week

destroy:
  stage: cleanup
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform destroy -auto-approve -refresh=false
  resource_group: ${TF_STATE_NAME}
  rules:
    - if: $DESTROY == "true"

scale_down:
  stage: cleanup
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform destroy -auto-approve -target module.helm.helm_release.platform-5gzorro -target module.vms.azurerm_linux_virtual_machine.vm -target module.vms.azurerm_network_interface.nic -target module.vms.azurerm_network_interface_security_group_association.example -target module.vms.azurerm_network_security_group.nsg -target module.vms.azurerm_public_ip.publicip -target module.aks.azurerm_kubernetes_cluster_node_pool.k8s -target module.commons.azurerm_dns_zone.default
  resource_group: ${TF_STATE_NAME}
  rules:
    - if: $SCALE_DOWN == "true"