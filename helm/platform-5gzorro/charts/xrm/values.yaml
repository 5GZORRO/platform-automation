# Default values for xrm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
role: ""
catalogueapp: 
  image:
    repository: gitlab-registry.fbk.eu/kubernetes-deploy/5g-zorro/xrm-catalogue-app
    pullPolicy: IfNotPresent
    tag: "fix"
  service:
    type: ClusterIP
    port: 8080
  postgres:
    host: postgres.postgres.svc.cluster.local
    port: 5432
    existingSecret: ""
    userKey: ""
    passwordKey: ""
  mano:
    id: ""
    type: ""
    site: ""
    ip: ""
    port: ""
    username: ""
    password: ""
    project: ""
  catalogue:
    id: ""
    url: ""
catalogueui:
  image:
    repository: gitlab-registry.fbk.eu/kubernetes-deploy/5g-zorro/xrm-catalogue-gui
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 80
  keycloak:
    enabled: false
  catalogue:
    port: ""
    scope: "" 
kafka:
  host: ""
gateway:
  image:
    repository: graviteeio/apim-gateway
    pullPolicy: IfNotPresent
    tag: "3"
  service:
    type: ClusterIP
    port: 8082
  mongo:
    uri: 
elasticsearch:
  image:
    repository: docker.elastic.co/elasticsearch/elasticsearch
    pullPolicy: IfNotPresent
    tag: "7.7.0"
  service:
    type: ClusterIP
    port: 9200
managementapi:
  image:
    repository: graviteeio/apim-management-api
    pullPolicy: IfNotPresent
    tag: "3"
  service:
    type: ClusterIP
    port: 8083
  mongo:
    uri: ""
managementui:
  image:
    repository: graviteeio/apim-management-ui
    pullPolicy: IfNotPresent
    tag: "3"
  service:
    type: ClusterIP
    port: 8080
portalui:
  image:
    repository: graviteeio/apim-portal-ui
    pullPolicy: IfNotPresent
    tag: "3"
  service:
    type: ClusterIP
    port: 8080
translator:
  image:
    repository: gitlab-registry.fbk.eu/kubernetes-deploy/5g-zorro/xrm-resource-definition-translator
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 8080
  postgres:
    host: postgres.postgres.svc.cluster.local
    port: 5432
    existingSecret: ""
    userKey: ""
    passwordKey: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
