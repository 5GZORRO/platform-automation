{{- $imageValues := .Values.image }}
{{- $elmarest := .Values.elmarest }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "elma.fullname" . }}
  labels:
    {{- include "elma.labels" . | nindent 4 }}
    elma/component: rest
  annotations:
    checksum/config: {{ include (print $.Template.BasePath "/deployment-configmap.yaml") . | sha256sum }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "elma.selectorLabels" . | nindent 6 }}
      elma/component: rest
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "elma.selectorLabels" . | nindent 8 }}
        elma/component: rest
    spec:
      {{- with (default .Values.global.imagePullSecrets .Values.imagePullSecrets) }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - envFrom:
          - configMapRef:
              name: {{ include "elma.fullname" . }}
          - secretRef:
              name: {{ include "elma.fullname" . }}
          env:
            - name: RABBITMQ_USER
              valueFrom:
                  secretKeyRef:
                  {{- if .Values.rabbitmq.existingSecret }}
                    name: {{ .Values.rabbitmq.existingSecret }}
                    key: {{ .Values.rabbitmq.userKey }}
                  {{- else }}
                      name: rabbitmq-elma-default-user
                      key: username
                  {{- end }}
            - name: RABBITMQ_PASSWORD
              valueFrom:
                  secretKeyRef:
                  {{- if .Values.rabbitmq.existingSecret }}
                    name: {{ .Values.rabbitmq.existingSecret }}
                    key: {{ .Values.rabbitmq.passwordKey }}
                  {{- else }}
                      name: rabbitmq-elma-default-user
                      key: password
                  {{- end }}
          image: {{ $imageValues.image }}:{{ $imageValues.tag }}
          command: ["elma_rest", "start"]
          imagePullPolicy: "{{ $imageValues.pullPolicy }}"
          name: {{ include "elma.fullname" . }}
          ports:
            - containerPort: 8000
          resources: {}
      {{- if $imageValues.pullSecrets }}
      imagePullSecrets:
        - name: {{ $imageValues.pullSecrets }}
      {{- end }}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "elma.fullname" . }}
spec:
  selector:
    {{- include "elma.selectorLabels" . | nindent 4 }}
    elma/component: rest
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      # nodePort: {{ $elmarest.nodePort }}
